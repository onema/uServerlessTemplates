package {{organization}}.{{name}}

import com.amazonaws.services.lambda.runtime.Context
import com.amazonaws.services.lambda.runtime.events.S3Event
import com.amazonaws.services.s3.{AmazonS3, AmazonS3ClientBuilder}
import io.onema.userverless.configuration.lambda.EnvLambdaConfiguration
import io.onema.userverless.function.LambdaHandler

import scala.collection.JavaConverters._


class CopyFunction extends LambdaHandler[S3Event, Unit] with EnvLambdaConfiguration {

  //--- Fields ---
  private val s3Client: AmazonS3 = AmazonS3ClientBuilder.defaultClient()
  private val destinationBucket: String = getValue("destination/bucket").getOrElse("")
  val logic = new CopyLogic(s3Client, destinationBucket)

  //--- Methods ---
  def execute(s3Event: S3Event, context: Context): Unit = {
    s3Event.getRecords.asScala.foreach(logic.copy)
  }
}
