service: {{name}}

provider:
  name: aws
  runtime: java8
  timeout: 30
  versionFunctions: false
  memorySize: 1024
  stage: dev
  region: us-east-1

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements: ${file(infrastructure/global-values.yml):iamRoleStatements}

  # Service wide environment variables
  environment:
    STAGE_NAME: ${self:custom.stageName}

    # The error topic is part of the bootstrap infrastructure for uServerless
    SNS_ERROR_TOPIC: ${file(infrastructure/global-values.yml):environment.SNS_ERROR_TOPIC}

# Custom values. These can be referenced in the Cloud Formation template
custom: ${file(infrastructure/global-values.yml):custom}

# you can add packaging information here
# Make sure to run "sbt assembly" to create a jar file
# with all your dependencies and put that jar file name here.
package:
  artifact: target/scala-2.12/app.jar

functions:
  {{name}}-function:
    handler: {{organization}}.{{name}}.EchoFunction::lambdaHandler
    # the DLQ is part of the bootstrap infrastructure for uServerless
    onError: ${file(infrastructure/global-values.yml):deadLetterQueue}
    events:
      - http:
          path: /
          method: post
{{#warmup}}

      - schedule:
          rate: rate(2 minutes)
          input:
            warmup: true
{{/warmup}}

# you can add CloudFormation resource templates here
#resources:
#  Parameters: ${file(infrastructure/custom-resources_cfn.yml):Parameters}
#  Resources: ${file(infrastructure/custom-resources_cfn.yml):Resources}